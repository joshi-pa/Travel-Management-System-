SET SERVEROUTPUT ON;
DECLARE
nCount NUMBER;

BEGIN
SELECT count(*) into nCount FROM user_tables where table_name = 'COUNTRY';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE COUNTRY ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table COUNTRY CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE COUNTRY (
    COUNTRY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000) primary key, 
    COUNTRY_NAME VARCHAR(20) NOT NULL)';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE COUNTRY (
    COUNTRY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000) primary key, 
    COUNTRY_NAME VARCHAR(20) NOT NULL)';    

END IF;

SELECT count(*) into nCount FROM user_tables where table_name = 'REVIEWS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE REVIEWS ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table REVIEWS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE REVIEWS (
    review_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 200000000) primary key,
    review_rating NUMBER CHECK (REVIEW_RATING IN (1,2, 3, 4, 5)),
    booking_id REFERENCES BOOKING(booking_id) on delete cascade
    )';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE REVIEWS (
    review_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 200000000) primary key,
    review_rating NUMBER CHECK (REVIEW_RATING IN (1,2, 3, 4, 5)),
    booking_id REFERENCES BOOKING(booking_id) on delete cascade
    )';    

END IF;


SELECT count(*) into nCount FROM user_tables where table_name = 'ROOM_TYPE';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE ROOM_TYPE ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table ROOM_TYPE CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE ROOM_TYPE(
    ROOM_TYPE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1 MAXVALUE 100000) primary key,
    ROOM_DESCRIPTION VARCHAR(20),
    COST_PER_DAY DECIMAL(10,2) NOT NULL,
    SMOKE_FRIENDLY NUMBER(1) CHECK (SMOKE_FRIENDLY IN (0,1)),
    PET_FRIENDLY NUMBER(1) CHECK (PET_FRIENDLY IN (0,1)))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE ROOM_TYPE(
    ROOM_TYPE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1 MAXVALUE 100000) primary key,
    ROOM_DESCRIPTION VARCHAR(20),
    COST_PER_DAY DECIMAL(10,2) NOT NULL,
    SMOKE_FRIENDLY NUMBER(1) CHECK (SMOKE_FRIENDLY IN (0,1)),
    PET_FRIENDLY NUMBER(1) CHECK (PET_FRIENDLY IN (0,1)))';    

END IF;



SELECT count(*) into nCount FROM user_tables where table_name = 'STATES';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE STATES ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table STATES CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE STATES (
    STATE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000) primary key, 
    STATE_NAME VARCHAR(20) NOT NULL,
    COUNTRY_ID REFERENCES COUNTRY(COUNTRY_id) ON DELETE CASCADE)';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE STATES (
    STATE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000) primary key, 
    STATE_NAME VARCHAR(20) NOT NULL,
    COUNTRY_ID REFERENCES COUNTRY(COUNTRY_id) ON DELETE CASCADE)';    

END IF;

SELECT count(*) into nCount FROM user_tables where table_name = 'CITY';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE CITY ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table CITY CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE CITY (
    CITY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 500 INCREMENT BY 5 MAXVALUE 100000) primary key, 
    CITY_NAME VARCHAR2(40) NOT NULL, 
    STATE_ID REFERENCES STATES(STATE_ID) ON DELETE CASCADE
    )';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE CITY (
   (
    CITY_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 500 INCREMENT BY 5 MAXVALUE 100000) primary key, 
    CITY_NAME VARCHAR2(40) NOT NULL, 
    STATE_ID REFERENCES STATES(STATE_ID) ON DELETE CASCADE
    )';    

END IF;


SELECT count(*) into nCount FROM user_tables where table_name = 'TOURIST_ATTRACTIONS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE TOURIST_ATTRACTIONS ALREADY EXISTS THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table  TOURIST_ATTRACTIONS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE  TOURIST_ATTRACTIONS (
    TOURIST_ATTRACTION_ID      NUMBER GENERATED BY DEFAULT AS IDENTITY,
    TOURIST_ATTRACTION_NAME   VARCHAR(100) NOT NULL,
    CITY_ID INT REFERENCES  CITY( CITY_ID) ON DELETE CASCADE,
    PRIMARY KEY(TOURIST_ATTRACTION_ID))';      
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE  TOURIST_ATTRACTIONS (
    TOURIST_ATTRACTION_ID      NUMBER GENERATED BY DEFAULT AS IDENTITY,
    TOURIST_ATTRACTION_NAME   VARCHAR(100) NOT NULL,
    CITY_ID INT REFERENCES  CITY( CITY_ID) ON DELETE CASCADE,
    PRIMARY KEY(TOURIST_ATTRACTION_ID))';      
END IF;




SELECT count(*) into nCount FROM user_tables where table_name = 'BOOKING_STATUS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE BOOKING_STATUS ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table BOOKING_STATUS CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE BOOKING_STATUS (
    BOOKING_STATUS_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000),
    BOOKING_STATUS    VARCHAR(20) NOT NULL,
    PRIMARY KEY(BOOKING_STATUS_ID))';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE BOOKING_STATUS (
    BOOKING_STATUS_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000),
    BOOKING_STATUS    VARCHAR(20) NOT NULL,
    PRIMARY KEY(BOOKING_STATUS_ID))';    

END IF;


SELECT count(*) into nCount FROM user_tables where table_name = 'PAYMENT_TYPE';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE PAYMENT_TYPE ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table PAYMENT_TYPE CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE PAYMENT_TYPE (
    PAYMENT_TYPE_ID     NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000)PRIMARY KEY ,
    PAYMENT_TYPE_DESC   VARCHAR(20) NOT NULL)';    
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE PAYMENT_TYPE (
    PAYMENT_TYPE_ID     NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000)PRIMARY KEY ,
    PAYMENT_TYPE_DESC   VARCHAR(20) NOT NULL)';
END IF;



SELECT count(*) into nCount FROM user_tables where table_name = 'PAYMENT';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE PAYMENT ALREADY EXISTS THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table PAYMENT CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE PAYMENT (
    PAYMENT_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000) PRIMARY KEY ,
    PAYMENT_TYPE_ID  REFERENCES PAYMENT_TYPE(payment_type_id) ON DELETE CASCADE)';    
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE PAYMENT (
    PAYMENT_ID        NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000) PRIMARY KEY ,
    PAYMENT_TYPE_ID  REFERENCES PAYMENT_TYPE(payment_type_id) ON DELETE CASCADE)';    
END IF;



SELECT count(*) into nCount FROM user_tables where table_name = 'HOTEL_CHAIN';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE HOTEL_CHAIN ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table HOTEL_CHAIN CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE HOTEL_CHAIN (
    HOTEL_CHAIN_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 400 INCREMENT BY 4 MAXVALUE 100000) primary key,
    HOTEL_CHAIN_NAME VARCHAR(80) NOT NULL )';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE HOTEL_CHAIN (
    HOTEL_CHAIN_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 400 INCREMENT BY 4 MAXVALUE 100000) primary key,
    HOTEL_CHAIN_NAME VARCHAR(80) NOT NULL )';    
END IF;



SELECT count(*) into nCount FROM user_tables where table_name = 'HOTEL';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE HOTEL ALREADY EXISTS THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table HOTEL CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE HOTEL (
    HOTEL_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 300 INCREMENT BY 3 MAXVALUE 100000) primary key,
    HOTEL_NAME VARCHAR(80) NOT NULL,
    STAR_RATING NUMBER(1) CHECK(STAR_RATING IN (1,2,3,4,5)),
    HOTEL_CHAIN_ID REFERENCES HOTEL_CHAIN(HOTEL_CHAIN_ID) ON DELETE CASCADE,
    CITY_ID REFERENCES CITY(CITY_ID) ON DELETE CASCADE,
    CONTACT_NO NUMBER(12),
    CHECK_IN_TIME VARCHAR(10),
    CHECK_OUT_TIME VARCHAR(10),
    ADDRESS VARCHAR(100) NOT NULL
    )';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE HOTEL (
    HOTEL_ID NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 300 INCREMENT BY 3 MAXVALUE 100000) primary key,
    HOTEL_NAME VARCHAR(80) NOT NULL,
    STAR_RATING VARCHAR(1) CHECK(STAR_RATING IN (1,2,3,4,5)),
    HOTEL_CHAIN_ID REFERENCES HOTEL_CHAIN(HOTEL_CHAIN_ID) ON DELETE CASCADE,
    CITY_ID REFERENCES CITY(CITY_ID) ON DELETE CASCADE,
    CONTACT_NO NUMBER(12),
    CHECK_IN_TIME VARCHAR(10),
    CHECK_OUT_TIME VARCHAR(10),
    ADDRESS VARCHAR(100) NOT NULL)';    
END IF;


SELECT count(*) into nCount FROM user_tables where table_name = 'ROOM';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE ROOM ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table ROOM CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE ROOM (
    room_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1 MAXVALUE 200000000) primary key,
    room_type_id REFERENCES ROOM_TYPE(room_type_id) on delete cascade,
    hotel_id REFERENCES HOTEL(hotel_id) on delete cascade)';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE ROOM (
    room_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1 MAXVALUE 200000000) primary key,
    room_type_id REFERENCES ROOM_TYPE(room_type_id) on delete cascade,
    hotel_id REFERENCES HOTEL(hotel_id) on delete cascade)';
    DBMS_OUTPUT.PUT_LINE('ELSE WALA PRINTLINE');
END IF;



SELECT count(*) into nCount FROM user_tables where table_name = 'USER_ENTITY';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE USER_ENTITY ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table USER_ENTITY CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE USER_ENTITY (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000) PRIMARY KEY,
    first_name VARCHAR(12) NOT NULL,
    last_name VARCHAR(12) NOT NULL,
    email_id VARCHAR(31) unique NOT NULL,
    PASS_WORD VARCHAR(20) NOT NULL,
    phone_number NUMBER,
    tourist_attraction_id NUMBER ,
    city_id NUMBER NOT NULL,
    date_joined DATE NOT NULL,
    date_of_birth DATE NOT NULL)';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE USER_ENTITY (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 2000000) PRIMARY KEY,
    first_name VARCHAR(12) NOT NULL,
    last_name VARCHAR(12) NOT NULL,
    email_id VARCHAR(31) unique NOT NULL,
    PASS_WORD VARCHAR(20) NOT NULL,
    phone_number NUMBER,
    tourist_attraction_id NUMBER ,
    city_id NUMBER NOT NULL,
    date_joined DATE NOT NULL,
    date_of_birth DATE NOT NULL)';    

END IF;


SELECT count(*) into nCount FROM user_tables where table_name = 'BOOKING';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE BOOKING ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table BOOKING CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE BOOKING (
  booking_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1 MAXVALUE 200000000) primary key,
  booking_date DATE NOT NULL,
  check_in_date DATE NOT NULL,
  check_out_date DATE NOT NULL,
  payment_id REFERENCES PAYMENT(payment_id) on delete cascade,
  total_amount DECIMAL(10,2) NOT NULL,
  total_rooms_booked number NOT NULL,
  hotel_id REFERENCES HOTEL(hotel_id) on delete cascade,
  user_id REFERENCES USER_ENTITY(user_id) on delete cascade,
  booking_status_id REFERENCES BOOKING_STATUS(booking_status_id) on delete cascade)';
ELSE
EXECUTE IMMEDIATE 'CREATE TABLE BOOKING (
  booking_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1000 INCREMENT BY 1 MAXVALUE 200000000) primary key,
  booking_date DATE NOT NULL,
  check_in_date DATE NOT NULL,
  check_out_date DATE NOT NULL,
  payment_id REFERENCES PAYMENT(payment_id) on delete cascade,
  total_amount DECIMAL(10,2) NOT NULL,
  total_rooms_booked number NOT NULL,
  hotel_id REFERENCES HOTEL(hotel_id) on delete cascade,
  user_id REFERENCES USER_ENTITY(user_id) on delete cascade,
  booking_status_id REFERENCES BOOKING_STATUS(booking_status_id) on delete cascade)';    

END IF;


SELECT count(*) into nCount FROM user_tables where table_name = 'ROOM_BOOKED_ENTITY';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE ROOM_BOOKED_ENTITY ALREADY EXISTS. THUS DROPPING CURRENT AND CREATING NEW!');
    execute immediate 'drop table ROOM_BOOKED_ENTITY CASCADE CONSTRAINTS';
    EXECUTE IMMEDIATE 'CREATE TABLE ROOM_BOOKED_ENTITY (
    room_booked_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1 MAXVALUE 200000000) primary key,
    booking_id REFERENCES BOOKING(booking_id) on delete cascade,
    room_id INT NOT NULL
    )';
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE ROOM_BOOKED_ENTITY (
    room_booked_id NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 100 INCREMENT BY 1 MAXVALUE 200000000) primary key,
    booking_id REFERENCES BOOKING(booking_id) on delete cascade,
    room_id INT NOT NULL
    )';    

END IF;



EXCEPTION
        WHEN OTHERS THEN
            dbms_output.put_line(dbms_utility.format_error_backtrace);
            dbms_output.put_line(SQLERRM);
            ROLLBACK;
            RAISE;
COMMIT;
END;
/